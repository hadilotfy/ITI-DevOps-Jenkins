apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
#      securityContext:
#        fsGroup: 1000
#        runAsUser: 0
      containers:
      - image: jenkins/jenkins:lts-jdk11
        imagePullPolicy: IfNotPresent
        name: jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
#        - containerPort: 50000
#          protocol: TCP
#        readinessProbe:
#          failureThreshold: 5
#          httpGet:
#            path: /login
#            port: 8080
#            scheme: HTTP
#          periodSeconds: 10
#          successThreshold: 2
#          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: data-disk
          mountPath: /var/jenkins_home
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data-disk
        persistentVolumeClaim:
          claimName: claim-jenkins

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-jenkins
  namespace: jenkins
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/docker/jenkins-home"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: claim-jenkins
  namespace: jenkins
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
